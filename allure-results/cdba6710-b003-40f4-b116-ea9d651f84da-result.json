{"name": "Проверка попытки логина курьера без поля login", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 400 and {'code': 400, 'message': 'Недостаточно данных для входа'} == '{\"message\":  \"Недостаточно данных для входа\"}')\n +  where 400 = <Response [400]>.status_code\n +  and   {'code': 400, 'message': 'Недостаточно данных для входа'} = json()\n +    where json = <Response [400]>.json\n +  and   '{\"message\":  \"Недостаточно данных для входа\"}' = Responses.courier_without_login_or_password_text", "trace": "self = <tests.test_login_courier.TestLoginCourier object at 0x0000024BC853ED20>\n\n    @allure.title('Проверка попытки логина курьера без поля login')\n    def test_no_login_courier(self):\n        payload = {\n            \"login\": \"\",\n            \"password\": Generator.generate_password(),\n            \"firstName\": Generator.generate_first_name()\n        }\n    \n        response = requests.post(ApiUrls.LOGIN_COURIER_API, data=payload)\n>       assert response.status_code == 400 and response.json() == Responses.courier_without_login_or_password_text\nE       assert (400 == 400 and {'code': 400, 'message': 'Недостаточно данных для входа'} == '{\"message\":  \"Недостаточно данных для входа\"}')\nE        +  where 400 = <Response [400]>.status_code\nE        +  and   {'code': 400, 'message': 'Недостаточно данных для входа'} = json()\nE        +    where json = <Response [400]>.json\nE        +  and   '{\"message\":  \"Недостаточно данных для входа\"}' = Responses.courier_without_login_or_password_text\n\ntests\\test_login_courier.py:30: AssertionError"}, "start": 1722200475625, "stop": 1722200475709, "uuid": "94926520-b29a-4ae9-a2f8-5aaad572db60", "historyId": "bd2d821ab8827826188793202cfea1a8", "testCaseId": "bd2d821ab8827826188793202cfea1a8", "fullName": "tests.test_login_courier.TestLoginCourier#test_no_login_courier", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login_courier"}, {"name": "subSuite", "value": "TestLoginCourier"}, {"name": "host", "value": "Lex_Legion"}, {"name": "thread", "value": "9168-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login_courier"}]}